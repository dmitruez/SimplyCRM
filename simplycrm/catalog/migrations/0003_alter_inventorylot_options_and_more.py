# Generated by Django 4.2.25 on 2025-10-28 19:52

from django.db import migrations, models
from django.utils.text import slugify


def populate_catalog_defaults(apps, schema_editor):
    Product = apps.get_model("catalog", "Product")
    ProductVariant = apps.get_model("catalog", "ProductVariant")

    for product in Product.objects.all().select_related("organization"):
        updates = {}
        if not product.slug:
            base_slug = slugify(product.name) or "product"
            slug = base_slug
            suffix = 1
            while (
                Product.objects.filter(organization=product.organization, slug=slug)
                .exclude(pk=product.pk)
                .exists()
            ):
                suffix += 1
                slug = f"{base_slug}-{suffix}"
            updates["slug"] = slug
        desired_status = "active" if getattr(product, "is_active", False) else "inactive"
        if product.status != desired_status:
            updates["status"] = desired_status
        if updates:
            Product.objects.filter(pk=product.pk).update(**updates)

    for product in Product.objects.all():
        variant_qs = ProductVariant.objects.filter(product=product).order_by("pk")
        variants = list(variant_qs)
        if not variants:
            continue
        if any(variant.is_default for variant in variants):
            continue
        first_variant = variants[0]
        ProductVariant.objects.filter(pk__in=[variant.pk for variant in variants if variant.pk != first_variant.pk]).update(
            is_default=False
        )
        ProductVariant.objects.filter(pk=first_variant.pk).update(is_default=True)


def revert_catalog_defaults(apps, schema_editor):
    Product = apps.get_model("catalog", "Product")
    ProductVariant = apps.get_model("catalog", "ProductVariant")

    Product.objects.filter(status__in=["active", "inactive"]).update(status="draft")
    ProductVariant.objects.update(is_default=False)


class Migration(migrations.Migration):

    dependencies = [
        ("catalog", "0002_product_main_image"),
    ]

    operations = [
        migrations.AlterModelOptions(
            name="inventorylot",
            options={"ordering": ["-received_at"]},
        ),
        migrations.AlterModelOptions(
            name="productvariant",
            options={"ordering": ["name"]},
        ),
        migrations.AlterModelOptions(
            name="supplier",
            options={"ordering": ["name"]},
        ),
        migrations.AlterUniqueTogether(
            name="category",
            unique_together=set(),
        ),
        migrations.AlterUniqueTogether(
            name="product",
            unique_together=set(),
        ),
        migrations.AlterUniqueTogether(
            name="productvariant",
            unique_together=set(),
        ),
        migrations.AddField(
            model_name="category",
            name="created_at",
            field=models.DateTimeField(auto_now_add=True, null=True),
        ),
        migrations.AddField(
            model_name="category",
            name="description",
            field=models.TextField(blank=True),
        ),
        migrations.AddField(
            model_name="category",
            name="is_active",
            field=models.BooleanField(default=True),
        ),
        migrations.AddField(
            model_name="category",
            name="updated_at",
            field=models.DateTimeField(auto_now=True, null=True),
        ),
        migrations.AddField(
            model_name="inventorylot",
            name="created_at",
            field=models.DateTimeField(auto_now_add=True, null=True),
        ),
        migrations.AddField(
            model_name="inventorylot",
            name="updated_at",
            field=models.DateTimeField(auto_now=True, null=True),
        ),
        migrations.AddField(
            model_name="pricehistory",
            name="created_at",
            field=models.DateTimeField(auto_now_add=True, null=True),
        ),
        migrations.AddField(
            model_name="pricehistory",
            name="updated_at",
            field=models.DateTimeField(auto_now=True, null=True),
        ),
        migrations.AddField(
            model_name="product",
            name="attributes",
            field=models.JSONField(blank=True, default=dict),
        ),
        migrations.AddField(
            model_name="product",
            name="created_at",
            field=models.DateTimeField(auto_now_add=True, null=True),
        ),
        migrations.AddField(
            model_name="product",
            name="metadata",
            field=models.JSONField(blank=True, default=dict),
        ),
        migrations.AddField(
            model_name="product",
            name="published_at",
            field=models.DateTimeField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name="product",
            name="slug",
            field=models.SlugField(blank=True, default="", max_length=255),
        ),
        migrations.AddField(
            model_name="product",
            name="status",
            field=models.CharField(
                choices=[
                    ("draft", "Черновик"),
                    ("active", "Активен"),
                    ("inactive", "Неактивен"),
                    ("archived", "Архив"),
                ],
                default="draft",
                max_length=16,
            ),
        ),
        migrations.AddField(
            model_name="product",
            name="updated_at",
            field=models.DateTimeField(auto_now=True, null=True),
        ),
        migrations.AddField(
            model_name="productvariant",
            name="barcode",
            field=models.CharField(blank=True, max_length=64),
        ),
        migrations.AddField(
            model_name="productvariant",
            name="created_at",
            field=models.DateTimeField(auto_now_add=True, null=True),
        ),
        migrations.AddField(
            model_name="productvariant",
            name="currency",
            field=models.CharField(default="USD", max_length=8),
        ),
        migrations.AddField(
            model_name="productvariant",
            name="is_default",
            field=models.BooleanField(default=False),
        ),
        migrations.AddField(
            model_name="productvariant",
            name="status",
            field=models.CharField(
                choices=[
                    ("active", "Активен"),
                    ("inactive", "Неактивен"),
                    ("archived", "Архив"),
                ],
                default="active",
                max_length=16,
            ),
        ),
        migrations.AddField(
            model_name="productvariant",
            name="updated_at",
            field=models.DateTimeField(auto_now=True, null=True),
        ),
        migrations.AddField(
            model_name="supplier",
            name="created_at",
            field=models.DateTimeField(auto_now_add=True, null=True),
        ),
        migrations.AddField(
            model_name="supplier",
            name="updated_at",
            field=models.DateTimeField(auto_now=True, null=True),
        ),
        migrations.RunPython(populate_catalog_defaults, revert_catalog_defaults),
        migrations.AlterField(
            model_name="category",
            name="slug",
            field=models.SlugField(blank=True, default="", max_length=255),
        ),
        migrations.AddConstraint(
            model_name="category",
            constraint=models.UniqueConstraint(
                fields=("organization", "slug"),
                name="catalog_category_unique_slug_per_org",
            ),
        ),
        migrations.AddConstraint(
            model_name="product",
            constraint=models.UniqueConstraint(
                fields=("organization", "sku"),
                name="catalog_product_unique_sku_per_org",
            ),
        ),
        migrations.AddConstraint(
            model_name="product",
            constraint=models.UniqueConstraint(
                fields=("organization", "slug"),
                name="catalog_product_unique_slug_per_org",
            ),
        ),
        migrations.AddConstraint(
            model_name="productvariant",
            constraint=models.UniqueConstraint(
                fields=("product", "sku"), name="catalog_variant_unique_sku_per_product"
            ),
        ),
    ]
